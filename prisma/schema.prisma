generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
  binaryTargets   = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String?
  emailVerified Boolean?  @default(false)
  image         String?
  role          String?   @default("user")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Upload {
  id        String   @id @default(cuid())
  filename  String
  url       String
  file_size Int
  file_type String
  createdAt DateTime @default(now())
  result    Json?
  userEmail String?
}

model Contact {
  id          String    @id @default(cuid())
  name        String
  email       String
  subject     String
  message     String
  status      String    @default("new")
  recievedAt  DateTime  @default(now())
  respondedAt DateTime?
}
